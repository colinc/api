{
  "swagger": "2.0",
  "info": {
    "title": "Zoom REST API",
    "description": "API Description",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/",
      "email": "developer@zoom.us"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0.0"
  },
  "host": "api.zoom.us",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/accounts" : {
      "get" : {
        "description" : "List all subaccounts",
        "tags": [
          "Accounts"
        ],
        "operationId":"accounts",
        "responses" : {
          "200": {
            "description" : "Account list returned"
          }
        }
      },
      "post" : {
        "description" : "Create an account",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountsCreate",
        "responses" : {
          "201" : {
            "description" : "Account created"
          }
        }
      }
    },
    "/accounts/{accountId}" : {
      "get" : {
        "description" : "List an account",
        "tags": [
          "Accounts"
        ],
        "operationId":"account",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "200": {
            "description" : "Account returned"
          }
        }
      },
      "patch" : {
        "description" : "Update an account",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account updated"
          }
        }
      },
      "delete" : {
        "description" : "Delete an account",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountDelete",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account deleted"
          }
        }
      }
    },
    "/accounts/{accountId}/settings" : {
      "get" : {
        "description" : "Get an account's settings",
        "tags": [
          "Accounts"
        ],
        "operationId":"accountSettings",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "200": {
            "description" : "Account settings returned"
          }
        }
      },
      "patch" : {
        "description" : "Update an account's settings",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountSettingsUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account settings updated"
          }
        }
      }
    },
    "/accounts/{accountId}/billing" : {
      "get" : {
        "description" : "Get an account's billing information",
        "tags": [
          "Accounts"
        ],
        "operationId":"accountBilling",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "200": {
            "description" : "Account billing information returned"
          }
        }
      },
      "patch" : {
        "description" : "Update an account's billing information",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountBillingUpdate",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account billing information updated"
          }
        }
      }
    },
    "/accounts/{accountId}/plans" : {
      "get" : {
        "description" : "Get an account's plans",
        "tags": [
          "Accounts"
        ],
        "operationId":"accountPlans",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "200": {
            "description" : "Account plans returned"
          }
        }
      },
      "post" : {
        "description" : "Add to an account's plans",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountPlanAdd",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account plans updated"
          }
        }
      }
    },
    "/accounts/{accountId}/plans/{plan}" : {
      "delete" : {
        "description" : "Remove an account's plans",
        "tags" : [
          "Accounts"
        ],
        "operationId":"accountPlanDelete",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "plan",
            "type": "string",
            "required": true
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Account plans removed"
          }
        }
      }
    },
    "/meetings/{meetingNumber}" : {
      "get" :{
        "description": "Get a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingGet",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "patch" :{
        "description": "Update a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingUpdate",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete" :{
        "description": "Delete a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingDelete",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/registrants" : {
      "get" :{
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegGet",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" :{
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegCreate",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/registrants/{registrantId}/status" : {
      "put" :{
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegistrantStatus",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "registrantId",
            "type": "string",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/status" : {
      "put" :{
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingStatus",
        "parameters" : [
          {
            "in": "path",
            "name": "meetingNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "description": "List all Users on Zoom.",
        "tags": [
          "User"
        ],
        "operationId": "users",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description" : "User status, value should be active/inactive/pending",
            "type": "string",
            "default": "active",
            "enum":["active","inactive","pending"]
          },
          {
            "in": "query",
            "name": "page_size",
            "description" : "The amount of records returns within a single API call. Defaults to 30. Max of 300 users.",
            "type": "integer",
            "default": 30
          },
          {
            "in": "query",
            "name": "page_number",
            "description" : "Current page number of returned records. Default to 1.",
            "type": "integer",
            "default": 1
          }
        ],
        "responses":{
          "200": {
            "description" : "User list returned",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          }
        }
      },
      "post": {
        "description": "Create a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "allOf": [
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "enum" : ["create", "custCreate", "autoCreate", "ssoCreate"]
                  },
                  "user_info" : {
                    "$ref" : "#/definitions/UserReference"
                  }
                }
              ]
            }
          }
        ],
        "responses":{
          "201": {
            "description" : "User Created",
            "schema" : {
              "$ref" : "#/definitions/UserIDReference"
            }
          },
          "409": {
            "description" : "User with that email already exists"
          }
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "description": "Get a user",
        "tags": [
          "User"
        ],
        "operationId": "user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"User object returned",
            "schema": {
              "allOf": [
                {
                  "$ref" : "#/definitions/UserIDReference"
                },
                {
                  "$ref" : "#/definitions/UserDetailsReference"
                }
              ]
            }
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "patch" :{
        "description": "Update a user",
        "tags": [
          "User"
        ],
        "operationId": "userUpdate",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "allOf": [
                {
                  "$ref" : "#/definitions/UserReference"
                },
                {
                  "$ref" : "#/definitions/UserDetailsReference"
                }
              ]
            }
          }
        ],
        "responses":{
          "204": {
            "description":"User updated"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "delete" : {
        "description": "Delete a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userDelete",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "action",
            "description" : "Delete Action Type<br/>**disassociate**: Dissassociate a User from account<br/>**delete**: Permanently Delete a user",
            "in": "query",
            "type": "string",
            "enum" : [
              "disassociate",
              "delete"
            ],
            "default": "disassociate"
          }
        ],
        "responses":{
          "204": {
            "description":"User deleted"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      }
    },
    "/users/{userId}/assistants" : {
      "get" : {
        "description": "List user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userListAssistants",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" : {
        "description": "Update user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userUpdateAssistants",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "body",
            "description" : "User assistant",
            "in": "body",
            "schema" : {
              "type" : "object",
              "properties" : {
                "email_or_id" : {
                  "type" : "string"
                }
              }
            }
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete" : {
        "description": "Delete user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userDeleteAssistants",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}" : {
      "delete" : {
        "description": "Delete user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userDeleteAssistant",
        "parameters": [
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "assistantId",
            "description" : "Assistant",
            "in": "path",
            "type": "string",
            "required" : true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/meetings" : {
      "get" :{
        "description": "Get user's meetings",
        "tags": [
          "Meeting"
        ],
        "operationId": "userGetMeetings",
        "parameters" : [
          {
            "in": "path",
            "name": "userId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" :{
        "description": "Create meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "userCreateMeetings",
        "parameters" : [
          {
            "in": "path",
            "name": "userId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "201": {
            "description":"Meeting Created"
          }
        }
      }
    },
    "/users/{userId}/password" : {
      "put":{
        "description" : "Update a user's password",
        "tags": [
          "User"
        ],
        "operationId": "userPassword",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "body",
            "description" : "User password",
            "in": "body",
            "schema" : {
              "type" : "object",
              "properties" : {
                "password" :{
                  "type" :"string",
                  "format": "password"
                }
              }
            }
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/picture" : {
      "put":{
        "description" : "Update a user's picture",
        "tags": [
          "User"
        ],
        "operationId": "userPicture",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "body",
            "description" : "User picture file, must be a jpg/jpeg file",
            "in": "formData",
            "type" : "file",
            "required" : true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/settings" : {
      "get" : {
        "description": "Get a user's settings on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userGetSettings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "login_type",
            "type": "integer"
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "patch" :{
        "description": "Update a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userUpdateSettings",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "settings",
            "required": true,
            "description": "User Settings",
            "schema": {
              "type":"object",
              "properties":{
                "meeting":{
                  "type": "object",
                  "properties" : {
                    "chat" :{
                      "type": "boolean"
                    },
                    "private_chat" :{
                      "type": "boolean"
                    },
                    "auto_saving_chat" :{
                      "type": "boolean"
                    },
                    "attendee_on_hold" :{
                      "type": "boolean"
                    },
                    "entry_exit_chime" :{
                      "type": "string",
                      "enum": [
                        "host",
                        "all",
                        "none"
                      ]
                    },
                    "record_play_voice" :{
                      "type": "boolean"
                    },
                    "group_hd" :{
                      "type": "boolean"
                    },
                    "feedback" :{
                      "type": "boolean"
                    },
                    "co_host" :{
                      "type": "boolean"
                    },
                    "annotation" :{
                      "type": "boolean"
                    },
                    "polling" :{
                      "type": "boolean"
                    },
                    "non_verbal_feedback" :{
                      "type": "boolean"
                    },
                    "breakout_room" :{
                      "type": "boolean"
                    },
                    "remote_support" :{
                      "type": "boolean"
                    },
                    "file_transfer" :{
                      "type": "boolean"
                    },
                    "vitual_background" :{
                      "type": "boolean"
                    },
                    "closed_caption" :{
                      "type": "boolean"
                    },
                    "far_end_camera_control" :{
                      "type": "boolean"
                    },
                    "share_dual_camera" :{
                      "type": "boolean"
                    },
                    "attention_tracking" :{
                      "type": "boolean"
                    },
                    "waiting_room" :{
                      "type": "boolean"
                    }
                  }
                },
                "recording":{
                  "type": "object",
                  "properties" : {
                    "local_recording" :{
                      "type": "boolean"
                    },
                    "cloud_recording" :{
                      "type": "boolean"
                    },
                    "record_speaker_view" :{
                      "type": "boolean"
                    },
                    "recird_gallery_view" :{
                      "type": "boolean"
                    },
                    "auto_recording" :{
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud"
                      ]
                    },
                    "record_audio_file" :{
                      "type": "boolean"
                    },
                    "save_chat_text" :{
                      "type": "boolean"
                    },
                    "show_timestamp" :{
                      "type": "boolean"
                    },
                    "auto_delete_cmr" :{
                      "type": "boolean"
                    },
                    "auto_delete_cmr_days" :{
                      "type": "integer"
                    }
                  }
                },
                "notification":{
                  "type": "object",
                  "properties" : {
                    "jbh_reminder" :{
                      "type": "boolean"
                    },
                    "cancel_meeting_reminder" :{
                      "type": "boolean"
                    },
                    "alternative_host_reminder" :{
                      "type": "boolean"
                    }
                  }
                },
                "feature":{
                  "type": "object",
                  "properties" : {
                    "meeting_capacity" :{
                      "type": "integer"
                    },
                    "large_meeting" :{
                      "type": "boolean"
                    },
                    "large_meeting_capacity" :{
                      "type": "integer"
                    },
                    "webinar" :{
                      "type": "boolean"
                    },
                    "webinar_capacity" :{
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/status" : {
      "put":{
        "description" : "Update a user's status",
        "tags": [
          "User"
        ],
        "operationId": "userStatus",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "body",
            "description" : "User status",
            "in": "body",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" :{
                  "type" :"string",
                  "enum" : ["active", "deactive"]
                }
              }
            }
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/ssoToken" : {
      "delete":{
        "description" : "Revoke a user's token on Zoom via user ID",
        "tags": [
          "User"
        ],
        "operationId": "userTokenDelete",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/tsp" : {
      "get":{
        "description" : "Get a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTsp",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post":{
        "description" : "Add a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspCreate",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/tsp/{tspId}" : {
      "get":{
        "description" : "Get a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspInfo",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "tspId",
            "description" : "TSP ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "patch":{
        "description" : "Update tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspUpdate",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "tspId",
            "description" : "TSP ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete":{
        "description" : "Delete tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspDelete",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "tspId",
            "description" : "TSP ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/token" : {
      "get":{
        "description" : "Get a user's token on Zoom via user ID",
        "tags": [
          "User"
        ],
        "operationId": "userToken",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/users/{userId}/webinars" : {
      "get" :{
        "description": "Get user's meetings",
        "tags": [
          "Webinar"
        ],
        "operationId": "userGetWebinars",
        "parameters" : [
          {
            "in": "path",
            "name": "userId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" :{
        "description": "Create webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "userCreateWebinar",
        "responses":{
          "201": {
            "description":"Meeting Created"
          }
        }
      }
    },
    "/users/{userId}/zpk" : {
      "get":{
        "description" : "Get a user's token on Zoom via user ID",
        "tags": [
          "User"
        ],
        "operationId": "userZPK",
        "parameters" :[
          {
            "name": "userId",
            "description" : "User ID",
            "in": "path",
            "type": "string",
            "required" : true
          },
          {
            "name": "type",
            "description" : "User token",
            "in": "query",
            "type": "string",
            "default" : "token",
            "enum":[
              "token",
              "zpk"
            ]
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}" : {
      "get" :{
        "description": "Get a meeting",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarGet",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "patch" :{
        "description": "Update a meeting",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarUpdate",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete" :{
        "description": "Delete a meeting",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarDelete",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/panelists" : {
      "get" :{
        "description": "Get webinar panelists",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelists",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" :{
        "description": "Register panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistCreate",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete" :{
        "description": "Cancel panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistsCancel",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/panelists/{panelistId}" : {
      "delete" :{
        "description": "Cancel panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistCancel",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "panelistId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/registrants" : {
      "get" :{
        "description": "Get webinar registrations",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegList",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "post" :{
        "description": "Register participant for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegCreate",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/registrants/{registrantId}" : {
      "get" :{
        "description": "Get webinar registrant",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegGet",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "registrantId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "delete" :{
        "description": "Cancel participant for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegCancel",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "registrantId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      },
      "patch" :{
        "description": "Update participant for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegUpdate",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "registrantId",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/status" : {
      "put" :{
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "webinarStatus",
        "parameters" : [
          {
            "in": "path",
            "name": "webinarNumber",
            "type": "integer",
            "required": true
          }
        ],
        "responses":{
          "200": {
            "description":"Success"
          }
        }
      }
    },
  },
  "definitions" : {
    "Pagination" : {
      "type" : "object",
      "description" : "Pagination Object",
      "properties" : {
        "page_count" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of items returned on this page."
        },
        "page_number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The page number of current results."
        },
        "page_size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of items per page."
        },
        "total_records" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of all records available across pages."
        }
      }
    },
    "UserList" : {
      "type" : "object",
      "description" : "List of Users",
      "allOf" : [
        {
          "$ref" : "#/definitions/Pagination"
        },
        {
          "properties" : {
            "users": {
              "type" : "array",
              "description" : "List of User objects.",
              "items" : {
                "allOf" : [
                  {
                    "$ref" : "#/definitions/UserIDReference"
                  },
                  {
                    "$ref" : "#/definitions/UserDetailsReference"
                  }
                ]
              },
            }
          }
        }
      ]
    },
    "UserReference": {
      "type": "object",
      "description": "It references a user",
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email address."
        },
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "type": {
          "type": "integer",
          "enum": [1,2,3],
          "description": "User's type. 1: Basic; 2: Pro; 3: Corp;"
        }
      }
    },
    "UserIDReference" : {
      "title" : "User object",
      "description" : "Reference to a User object.",
      "type" : "object",
      "allOf" : [
        {
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "User ID"
            }
          }
        },
        {
          "$ref" : "#/definitions/UserReference"
        }
      ]
    },
    "UserDetailsReference" : {
      "title" : "User object with details",
      "description" : "Reference to a User object with details.",
      "type" : "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format" : "dateTime"
        },
        "dept": {
          "type": "string"
        },
        "last_client_version": {
          "type": "string"
        },
        "last_login_time": {
          "type": "string",
          "format" : "dateTime"
        },
        "pic_url": {
          "type": "string"
        },
        "pmi": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "vanity_url": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        }
      }
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User operations"
    },
    {
      "name": "Meeting",
      "description": "Meeting operations"
    },
    {
      "name": "Webinar",
      "description": "Webinar operations"
    },
    {
      "name": "Accounts",
      "description": "Account operations"
    },
    {
      "name": "TSP",
      "description": "TSP operations"
    }
  ],
  "externalDocs": {
    "description": "Zoom REST API Documentation",
    "url": "https://zoom.github.io/api"
  },
  "securityDefinitions" : {
    "global": {
      "type" : "apiKey",
      "name" : "jwt",
      "in" : "query"
    }
  },
  "security" : [{"global":[]}]
}