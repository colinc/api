{
  "swagger": "2.0",
  "info": {
    "title": "Zoom REST API",
    "description": "API Description",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/",
      "email": "developer@zoom.us"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0.0"
  },
  "host": "api.zoom.us",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "description": "List all Accounts.",
        "tags": [
          "Accounts"
        ],
        "operationId": "accounts",
        "parameters": [
          {
            "$ref" : "#/parameters/PageSize"
          },
          {
            "$ref" : "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Account list returned",
            "schema": {
              "$ref": "#/definitions/AccountList"
            }
          }
        }
      },
      "post": {
        "description": "Create an account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountsCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Account",
            "schema": {
              "$ref" : "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Account",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Account ID"
                }
              }
            }
          },
          "409": {
            "description": "Account with that email already exists"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "description": "List an account",
        "tags": [
          "Accounts"
        ],
        "operationId": "account",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Account ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "description": "Account Owner ID"
                    },
                    "owner_email": {
                      "type": "string",
                      "description": "Account Owner email"
                    },
                    "created_at": {
                      "type": "string",
                      "format" : "dateTime",
                      "description": "Account creation date/time"
                    },
                    "options" : {
                      "$ref": "#/definitions/AccountOptions"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "description": "Delete an account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountDelete",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted"
          },
          "404" : {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/options": {
      "patch": {
        "description": "Update an account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AccountOptions"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account options updated"
          },
          "404" : {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "description": "Get an account's settings",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account settings returned",
            "schema" : {
              "$ref": "#/definitions/AccountSettings"
            }
          },
          "404":{
            "description": "Account not found"
          }
        }
      },
      "patch": {
        "description": "Update an account's settings",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/AccountSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account settings updated"
          },
          "404":{
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/billing": {
      "get": {
        "description": "Get an account's billing information",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBilling",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account billing contact information returned",
            "schema" : {
              "$ref" : "#/definitions/BillingContact"
            }
          },
          "404" : {
            "description": "Account not found"
          }
        }
      },
      "patch": {
        "description": "Update an account's billing information",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBillingUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema" : {
              "$ref": "#/definitions/BillingContact"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account billing contact information updated"
          },
          "404" : {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/plans": {
      "get": {
        "description": "Get an account's plans",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlans",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account plans returned",
            "schema" : {
              "$ref": "#/definitions/AccountPlans"
            }
          },
          "404" : {
            "description": "Account not fond"
          }
        }
      },
      "put": {
        "description": "Add to an account's plans",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanAdd",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPlans"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account plans updated"
          }
        }
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "description": "Get a user's meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "userGetMeetings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref" : "#/parameters/MeetingType"
          },
          {
            "$ref" : "#/parameters/PageSize"
          },
          {
            "$ref" : "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Meeting objects returned",
            "schema": {
              "$ref": "#/definitions/MeetingList"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "description": "Create meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "userCreateMeetings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "$ref": "#/definitions/Meeting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meeting Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Meeting",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Meeting ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/meetings/{meetingNumber}": {
      "get": {
        "description": "Get a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingGet",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Meeting unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Meeting ID, also know as meeting number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of meeting"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Meeting"
                }
              ]
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "patch": {
        "description": "Update a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "$ref": "#/definitions/Meeting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting Updated"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "delete": {
        "description": "Delete a meeting",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingDelete",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting deleted"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/registrants": {
      "get": {
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegGet",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          },
          {
            "$ref": "#/parameters/OccurenceId"
          },
          {
            "$ref": "#/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingRegistrantList"
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "post": {
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegCreate",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MeetingRegistrant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this registrant"
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/registrants/{registrantId}/status": {
      "put": {
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingRegistrantStatus",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          },
          {
            "$ref": "#/parameters/RegistrantId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "approved",
                    "denied"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Meeting or Registrant not found"
          }
        }
      }
    },
    "/meetings/{meetingNumber}/status": {
      "put": {
        "description": "",
        "tags": [
          "Meeting"
        ],
        "operationId": "meetingStatus",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "end"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting updated"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "List all Users on Zoom.",
        "tags": [
          "User"
        ],
        "operationId": "users",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "User status, value should be active/inactive/pending",
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "inactive",
              "pending"
            ]
          },
          {
            "$ref" : "#/parameters/PageSize"
          },
          {
            "$ref" : "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "User list returned",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          }
        }
      },
      "post": {
        "description": "Create a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "create",
                    "custCreate",
                    "autoCreate",
                    "ssoCreate"
                  ]
                },
                "user_info": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created User",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User ID"
                }
              }
            }
          },
          "409": {
            "description": "User with that email already exists"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Get a user",
        "tags": [
          "User"
        ],
        "operationId": "user",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "User object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "$ref": "#/definitions/UserDetails"
                }
              ]
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "description": "Update a user",
        "tags": [
          "User"
        ],
        "operationId": "userUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "$ref": "#/definitions/UserDetails"
                }
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "description": "Delete a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/assistants": {
      "get": {
        "description": "List user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userListAssistants",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "assistants": {
                  "type": "array",
                  "description": "List of User assistants.",
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "email_or_id": {
                            "type": "string",
                            "description": "Assistant Email or ID"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "description": "Update user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userUpdateAssistants",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User assistant",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email_or_id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Assitant Added",
            "headers": {
              "Content-Location": {
                "description": "Location of created assistant",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "email_or_id": {
                  "type": "string",
                  "description": "User ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "description": "Delete all of user's assistants",
        "tags": [
          "User"
        ],
        "operationId": "userDeleteAssistants",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Assitants deleted."
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}": {
      "delete": {
        "description": "Delete one of a user's assistant",
        "tags": [
          "User"
        ],
        "operationId": "userDeleteAssistant",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "assistantId",
            "description": "Assistant",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Assitant deleted."
          },
          "404": {
            "description": "User or Assistant not found"
          }
        }
      }
    },
    "/users/{userId}/picture": {
      "put": {
        "description": "Update a user's picture",
        "tags": [
          "User"
        ],
        "operationId": "userPicture",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User picture file, must be a jpg/jpeg file",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Picture Added",
            "headers": {
              "Content-Location": {
                "description": "Location of user's picture",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Picture Updated",
            "headers": {
              "Content-Location": {
                "description": "Location of user's picture",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/settings": {
      "get": {
        "description": "Get a user's settings on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userGetSettings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "query",
            "name": "login_type",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User settings returned",
            "schema": {
              "$ref": "#/definitions/UserSettings"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "description": "Update a user on Zoom",
        "tags": [
          "User"
        ],
        "operationId": "userUpdateSettings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User Settings",
            "schema": {
              "$ref": "#/definitions/UserSettings"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User setting's updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/status": {
      "put": {
        "description": "Update a user's status",
        "tags": [
          "User"
        ],
        "operationId": "userStatus",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User status",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "active",
                    "deactive"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/ssoToken": {
      "delete": {
        "description": "Revoke a user's token on Zoom via user ID",
        "tags": [
          "User"
        ],
        "operationId": "userTokenDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Token deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "description": "Get a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTsp",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "description": "Add a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspCreate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "get": {
        "description": "Get a user's tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspInfo",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "tspId",
            "description": "TSP ID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "description": "Update tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "tspId",
            "description": "TSP ID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "description": "Delete tsp config",
        "tags": [
          "TSP"
        ],
        "operationId": "userTspDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "tspId",
            "description": "TSP ID",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/{userId}/token": {
      "get": {
        "description": "Get a user's token on Zoom via user ID",
        "tags": [
          "User"
        ],
        "operationId": "userToken",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Token returned",
            "schema": {
              "properties": {
                "token": {
                  "type": "string",
                  "description": "User Token"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/zpk": {
      "get": {
        "description": "Check if the zpk is expired. The zpk is used to authenticate a user.",
        "tags": [
          "User"
        ],
        "operationId": "userZPK",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "type",
            "description": "User token",
            "in": "query",
            "type": "string",
            "default": "token",
            "enum": [
              "token",
              "zpk"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "description": "Get user's webinars",
        "tags": [
          "Webinar"
        ],
        "operationId": "userGetWebinars",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref" : "#/parameters/PageSize"
          },
          {
            "$ref" : "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webinar objects returned",
            "schema": {
              "$ref": "#/definitions/WebinarList"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "description": "Create webinar",
        "tags": [
          "Webinar"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "$ref": "#/definitions/Webinar"
            }
          }
        ],
        "operationId": "userCreateWebinar",
        "responses": {
          "201": {
            "description": "Webinar Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Webinar",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Webinar ID"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}": {
      "get": {
        "description": "Get a webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarGet",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Webinar unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Webinar ID, also know as webinar number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of webinar"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Webinar"
                }
              ]
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "patch": {
        "description": "Update a webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar",
            "schema": {
              "$ref": "#/definitions/Webinar"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar Updated"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "delete": {
        "description": "Delete a webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarDelete",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar deleted"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/panelists": {
      "get": {
        "description": "",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistGet",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "$ref": "#/parameters/OccurenceId"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebinarPanelistList"
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "post": {
        "description": "Register panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistCreate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebinarPanelist"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Panelist created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Panelist ID"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this panelist"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "delete": {
        "description": "Remove all panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistsCancelAll",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404" : {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/panelists/{panelistId}": {
      "delete": {
        "description": "Cancel panelist for webinar",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarPanelistCancel",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "in": "path",
            "name": "panelistId",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404" : {
            "description": "Webinar or Panelist not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/registrants": {
      "get": {
        "description": "",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegGet",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "$ref": "#/parameters/OccurenceId"
          },
          {
            "$ref": "#/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebinarRegistrantList"
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "post": {
        "description": "",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegCreate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebinarRegistrant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this registrant"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/registrants/{registrantId}/status": {
      "put": {
        "description": "",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarRegistrantStatus",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "$ref": "#/parameters/RegistrantId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "approved",
                    "denied"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Webinar or Registrant not found"
          }
        }
      }
    },
    "/webinars/{webinarNumber}/status": {
      "put": {
        "description": "",
        "tags": [
          "Webinar"
        ],
        "operationId": "webinarStatus",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarNumber"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "end"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar updated"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    }
  },
  "parameters": {
    "AccountId": {
      "in": "path",
      "name": "accountId",
      "type": "string",
      "required": true
    },
    "MeetingNumber": {
      "in": "path",
      "name": "meetingNumber",
      "type": "integer",
      "required": true
    },
    "MeetingType": {
      "in": "query",
      "name": "type",
      "type": "string",
      "enum": [
        "scheduled",
        "live"
      ]
    },
    "OccurenceId": {
      "in": "query",
      "name": "occurrence_id",
      "type": "string"
    },
    "PageNumber": {
      "in": "query",
      "name": "page_number",
      "type": "integer",
      "default": 1
    },
    "PageSize": {
      "in": "query",
      "name": "page_size",
      "type": "integer",
      "default": 30
    },
    "RegistrantId": {
      "in": "path",
      "name": "registrantId",
      "type": "string",
      "required": true
    },
    "RegistrantStatus": {
      "in": "query",
      "name": "status",
      "type": "string",
      "default": "approved",
      "enum": [
        "approved",
        "pending",
        "denied"
      ]
    },
    "UserId": {
      "in": "path",
      "name": "userId",
      "type": "string",
      "required": true
    },
    "WebinarNumber": {
      "in": "path",
      "name": "webinarNumber",
      "type": "integer",
      "required": true
    }
  },
  "definitions": {
    "Account" : {
      "type" : "object",
      "description" : "Account object",
      "properties" : {
        "email": {
          "type": "string",
          "description": "User's email address."
        },
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "password": {
          "type": "string",
          "description": "User's password."
        },
        "options": {
          "$ref" : "#/definitions/AccountOptions"
        }
      }
    },
    "AccountList" : {
      "type": "object",
      "title": "Account List",
      "description": "List of Accounts",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "accounts": {
              "type": "array",
              "description": "List of Account objects.",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Account ID"
                      }
                    }
                  },
                  {
                    "properties": {
                      "owner_email": {
                        "type": "string",
                        "description": "Account Owner email"
                      }
                    }
                  },
                  {
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format" : "dateTime",
                        "description": "Account creation date/time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "AccountOptions" : {
      "type" : "object",
      "description" : "Account options object",
      "properties" : {
        "share_rc": {
          "type": "boolean",
          "description": "Enable Share Virtual Room Connector.",
          "default" : false
        },
        "room_connectors": {
          "type": "string",
          "description": "Virtual Room Connector, multiple value separated by comma."
        },
        "share_mc": {
          "type": "boolean",
          "description": "Enable Share Meeting Connector.",
          "default" : false
        },
        "meeting_conntectors": {
          "type": "string",
          "description": "Meeting Connector, multiple value separated by comma."
        },
        "pay_mode": {
          "type": "string",
          "description": "User's password.",
          "enum" : ["master", "sub"],
          "default" : "master"
        }
      }
    },
    "AccountPlan" : {
      "type" : "object",
      "description": "Account plan object",
      "properties": {
        "type" : {
          "type" : "string",
          "description" : "Account plan type"
        },
        "hosts" : {
          "type" : "integer",
          "description" : "Account plan number of hosts"
        }
      }
    },
    "AccountPlans" : {
      "type" : "object",
      "description": "Account Plans object",
      "properties": {
        "plan_base" : {
          "$ref": "#/definitions/AccountPlan"
        },
        "plan_zoom_rooms" : {
          "$ref": "#/definitions/AccountPlan"
        },
        "plan_room_connector" : {
          "$ref": "#/definitions/AccountPlan"
        },
        "plan_large_meeting" : {
          "type" : "array",
          "items" : {
            "$ref": "#/definitions/AccountPlan"
          }
        },
        "plan_webinar" : {
          "type" : "array",
          "items" : {
            "$ref": "#/definitions/AccountPlan"
          }
        },
        "plan_recording" : {
          "type" : "string"
        },
        "plan_audio" : {
          "type" : "object",
          "properties": {
            "type" : {
              "type" : "string"
            },
            "tollfree_country" : {
              "type" : "string"
            },
            "premium_country" : {
              "type" : "string"
            },
            "callout" : {
              "type" : "boolean"
            },
            "ddi_numbers" : {
              "type" : "integer"
            }
          }
        }
      }
    },
    "AccountSettings" : {
      "title": "User settings",
      "type": "object",
      "properties": {
        "in_meeting": {
          "$ref": "#/definitions/AccountSettingsInMeeting"
        },
        "schedule_meting": {
          "$ref": "#/definitions/AccountSettingsScheduleMeeting"
        },
        "join_meeting": {
          "$ref": "#/definitions/AccountSettingsJoinMeeting"
        },
        "recording": {
          "$ref": "#/definitions/AccountSettingsRecording"
        },
        "notification": {
          "$ref": "#/definitions/AccountSettingsNotification"
        },
        "audio": {
          "$ref": "#/definitions/AccountSettingsAudio"
        },
        "zoom_rooms": {
          "$ref": "#/definitions/AccountSettingsZoomRooms"
        },
        "admin": {
          "$ref": "#/definitions/AccountSettingsAdmin"
        },
        "integration": {
          "$ref": "#/definitions/AccountSettingsIntegration"
        },
        "html_email_template": {
          "$ref": "#/definitions/AccountSettingsHTMLEmailTemplate"
        },
        "user_profile": {
          "$ref": "#/definitions/AccountSettingsUserProfile"
        },
        "feature": {
          "$ref": "#/definitions/AccountSettingsFeature"
        }
      }
    },
    "AccountSettingsInMeeting" : {
      "type" : "object",
      "description": "Account Settings: In Meeting",
      "properties": {
        "e2e_encryption": {
          "type" : "boolean",
          "description": "End-to-End Encryption",
          "default" : true
        },
        "chat": {
          "type" : "boolean",
          "description" : "Chat",
          "default" : false
        },
        "private_chat": {
          "type" : "boolean",
          "description" : "Private Chat",
          "default" : false
        },
        "auto_saving_chat": {
          "type" : "boolean",
          "description" : "Auto Saving Chats",
          "default" : false
        },
        "feedback": {
          "type" : "boolean",
          "description" : "Feedback to Zoom",
          "default" : false
        },
        "post_meeting_feedback": {
          "type" : "boolean",
          "description" : "Display end-of-meeting experience feedback survey",
          "default" : false
        },
        "co_host": {
          "type" : "boolean",
          "description" : "Co-Host",
          "default" : true
        },
        "polling": {
          "type" : "boolean",
          "description" : "Polling",
          "default" : false
        },
        "attendee_on_hold": {
          "type" : "boolean",
          "description" : "Allow host to put attendee on hold",
          "default" : true
        },
        "show_meeting_control_toolbar": {
          "type" : "boolean",
          "description" : "Always show meeting control toolbar",
          "default" : true
        },
        "allow_show_zoom_windows": {
          "type" : "boolean",
          "description" : "Allow to share Zoom windows in desktop sharing",
          "default" : true
        },
        "alert_guest_join": {
          "type" : "boolean",
          "description" : "Alert internal participants when a guest joins a meeting",
          "default" : true
        },
        "webinar_question_answer": {
          "type" : "boolean",
          "description" : "Q&A in webinar",
          "default" : true
        },
        "anonymous_question_answer": {
          "type" : "boolean",
          "description" : "Allow Anonymous Q&A in Webinar",
          "default" : true
        },
        "breakout_room": {
          "type" : "boolean",
          "description" : "Breakout room",
          "default" : false
        },
        "file_transfer": {
          "type" : "boolean",
          "description" : "File transfer",
          "default" : false
        },
        "closed_caption": {
          "type" : "boolean",
          "description" : "Closed caption",
          "default" : true
        },
        "far_end_camera_control": {
          "type" : "boolean",
          "description" : "Far end camera control",
          "default" : true
        },
        "group_hd": {
          "type" : "boolean",
          "description" : "Group HD video",
          "default" : true
        },
        "dscp_marking": {
          "type" : "boolean",
          "description" : "DSCP marking",
          "default" : true
        },
        "dscp_audio": {
          "type" : "integer",
          "description" : "DSCP Audio"
        },
        "dscp_video": {
          "type" : "integer",
          "description" : "DSCP Video"
        },
        "virtual_background": {
          "type" : "boolean",
          "description" : "Virtual background",
          "default" : false
        },
        "sending_default_email_invites": {
          "type" : "boolean",
          "description" : "Only show default email when sending email invites",
          "default" : false
        },
        "p2p_connetion": {
          "type" : "boolean",
          "description" : "Peer to Peer connection while only 2 people in a meeting Learn More",
          "default" : true
        },
        "p2p_ports": {
          "type" : "string",
          "description" : "Listening ports range, separated by comma, such as 55,56"
        }
      }
    },
    "AccountSettingsScheduleMeeting" : {
      "type" : "object",
      "description": "Account Settings: Schedule Meeting",
      "properties": {
        "join_before_host": {
          "type" : "boolean",
          "description": "Join Before Host",
          "default" : false
        },
        "host_video": {
          "type" : "boolean",
          "description": "Host Video",
          "default" : false
        },
        "participant_video": {
          "type" : "boolean",
          "description": "Participants Video",
          "default" : false
        },
        "both_audio": {
          "type" : "boolean",
          "description": "Audio: Telephony and VoIP",
          "default" : true
        },
        "not_store_meeting_topic": {
          "type" : "boolean",
          "description": "Always display 'Zoom Meeting' as the meeting topic",
          "default" : false
        },
        "force_pmi_jbh_password": {
          "type" : "boolean",
          "description": "Require a password for Personal Meetings if attendees can join before host",
          "default" : false
        }
      }
    },
    "AccountSettingsJoinMeeting" : {
      "type" : "object",
      "description": "Account Settings: Join Meeting",
      "properties": {
        "auto_answer": {
          "type" : "boolean",
          "description": "Enable Auto Answer Group",
          "default" : true
        },
        "enforce_login": {
          "type" : "boolean",
          "description": "Only signed-in users can join meetings",
          "default" : true
        },
        "enforce_login_domains": {
          "type" : "string",
          "description" : "Only signed-in users with specified domains can join meetings"
        },
        "watermark": {
          "type" : "boolean",
          "description": "Add watermark when viewing the shared screen",
          "default" : false
        }
      }
    },
    "AccountSettingsRecording" : {
      "type" : "object",
      "description": "Account Settings: Recording",
      "properties": {
        "local_recording": {
          "type" : "boolean",
          "description": "Local recording",
          "default" : false
        },
        "cloud_recording": {
          "type" : "boolean",
          "description": "Cloud recording",
          "default" : false
        },
        "auto_recording": {
          "type" : "boolean",
          "description": "Automatic recording",
          "default" : false
        },
        "cloud_recording_download": {
          "type" : "boolean",
          "description": "Cloud Recording Downloads",
          "default" : false
        },
        "cloud_recording_download_host": {
          "type" : "boolean",
          "description": "Only the host can download cloud recordings",
          "default" : false
        },
        "account_user_access_recording": {
          "type" : "boolean",
          "description": "Only users on my account can access cloud recordings",
          "default" : false
        },
        "cloud_recording_notification": {
          "type" : "boolean",
          "description": "Push notification to subscription URL when a cloud recording is available",
          "default" : false
        },
        "auto_delete_cmr": {
          "type" : "boolean",
          "description": "Auto delete cloud recordings after days",
          "default" : false
        },
        "auto_delete_cmr_days": {
          "type" : "integer",
          "description": "Number of auto delete cloud recordings after days",
          "default" : 0
        }
      }
    },
    "AccountSettingsNotification" : {
      "type" : "object",
      "description": "Account Settings: Notification",
      "properties": {
        "cloud_recording_avaliable_reminder": {
          "type" : "boolean",
          "description": "Allow keep recording from being automatically deleted",
          "default" : true
        },
        "jbh_reminder": {
          "type" : "boolean",
          "description": "When attendees join meeting before host",
          "default" : false
        },
        "cancel_meeting_reminder": {
          "type" : "boolean",
          "description": "When a meeting is cancelled",
          "default" : false
        },
        "low_host_count_reminder": {
          "type" : "boolean",
          "description": "When host count is low",
          "default" : false
        },
        "alternative_host_reminder": {
          "type" : "boolean",
          "description": "When an alternative host is set or removed from a meeting",
          "default" : false
        }
      }
    },
    "AccountSettingsAudio" : {
      "type" : "object",
      "description": "Account Settings: Audio",
      "properties": {
        "stereo_audio": {
          "type" : "boolean",
          "description": "",
          "default" : false
        },
        "original_audio": {
          "type" : "boolean",
          "description": "Allow users to select original sound in their client settings",
          "default" : false
        },
        "third_party_audio": {
          "type" : "boolean",
          "description": "3rd party audio conference",
          "default" : false
        }
      }
    },
    "AccountSettingsZoomRooms" : {
      "type" : "object",
      "description": "Account Settings: Zoom Rooms",
      "properties": {
        "upcoming_meeting_alert": {
          "type" : "boolean",
          "description": "Upcoming meeting alert",
          "default" : true
        },
        "start_airplay_manually": {
          "type" : "boolean",
          "description": "Start AirPlay service manually",
          "default" : true
        },
        "weekly_system_restart": {
          "type" : "boolean",
          "description": "Weekly system restart",
          "default" : true
        },
        "list_meetings_with_calendar": {
          "type" : "boolean",
          "description": "Display meeting list with calendar integration",
          "default" : true
        },
        "ultrasonic": {
          "type" : "boolean",
          "description": "Automatic direct sharing using ultrasonic proximity signal",
          "default" : false
        },
        "force_private_meeting": {
          "type" : "boolean",
          "description": "Transform all meetings to private",
          "default" : true
        },
        "hide_host_information": {
          "type" : "boolean",
          "description": "Hide host and meeting ID from private meetings",
          "default" : true
        },
        "cmr_for_instant_meeting": {
          "type" : "boolean",
          "description": "Cloud recording for instant meetings",
          "default" : true
        },
        "auto_start_stop_scheduled_meetings": {
          "type" : "boolean",
          "description": "Automatic start/stop scheduled meetings",
          "default" : true
        }
      }
    },
    "AccountSettingsAdmin" : {
      "type" : "object",
      "description": "Account Settings: Admin",
      "properties": {
        "hide_billing_info": {
          "type" : "boolean",
          "description": "Hide billing information from administrators",
          "default" : true
        },
        "auto_active_import_users": {
          "type" : "boolean",
          "description": "Auto activation when import users",
          "default" : true
        }
      }
    },
    "AccountSettingsIntegration" : {
      "type" : "object",
      "description": "Account Settings: Integration",
      "properties": {
        "google_calendar": {
          "type" : "boolean",
          "description": "Google Calendar",
          "default" : true
        },
        "google_drive": {
          "type" : "boolean",
          "description": "Google Drive",
          "default" : true
        },
        "dropbox": {
          "type" : "boolean",
          "description": "Dropbox",
          "default" : true
        },
        "box": {
          "type" : "boolean",
          "description": "Box",
          "default" : true
        },
        "microsoft_one_drive": {
          "type" : "boolean",
          "description": "Microsoft OneDrive",
          "default" : true
        },
        "kubi": {
          "type" : "boolean",
          "description": "Kubi",
          "default" : true
        }
      }
    },
    "AccountSettingsHTMLEmailTemplate" : {
      "type" : "object",
      "description": "Account Settings: HTML Email Template",
      "properties": {
        "use_html_format_email": {
          "type" : "boolean",
          "description": "Use HTML format email for Outlook plugin",
          "default" : true
        }
      }
    },
    "AccountSettingsUserProfile" : {
      "type" : "object",
      "description": "Account Settings: User Profile",
      "properties": {
        "admin_change_name_pic": {
          "type" : "boolean",
          "description": "Only account administrators can change users' usernames and profile pictures",
          "default" : true
        },
        "import_photos_from_devices": {
          "type" : "boolean",
          "description": "Allow importing of photos from the photo library on the user's device",
          "default" : true
        }
      }
    },
    "AccountSettingsFeature" : {
      "type" : "object",
      "description": "Account Settings: Feature",
      "properties": {
        "meeting_capacity": {
          "type" : "integer",
          "description": "Meeting capacity",
          "default" : 100
        }
      }
    },
    "BillingContact" : {
      "type" : "object",
      "description": "Billing Contact object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "Billing Contact's first name."
        },
        "last_name": {
          "type": "string",
          "description": "Billing Contact's last name."
        },
        "email": {
          "type": "string",
          "description": "Billing Contact's email address."
        },
        "phone_number": {
          "type": "string",
          "description": "Billing Contact's phone number."
        },
        "address": {
          "type": "string",
          "description": "Billing Contact address."
        },
        "apt": {
          "type": "string",
          "description": "Billing Contact apartment/suite."
        },
        "city": {
          "type": "string",
          "description": "Billing Contact city."
        },
        "state": {
          "type": "string",
          "description": "Billing Contact state."
        },
        "zip": {
          "type": "string",
          "description": "Billing Contact zip/postal code."
        },
        "country": {
          "type": "string",
          "description": "Billing Contact country."
        }
      }
    },
    "CustomQuestion": {
      "type": "object",
      "description": "Custom Question",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Meeting": {
      "type": "object",
      "description": "Meeting object",
      "allOf": [
        {
          "$ref": "#/definitions/Session"
        }
      ]
    },
    "MeetingList": {
      "type": "object",
      "title": "User List",
      "description": "List of Meetings",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "description": "List of Meeting objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Meeting unique ID"
                      },
                      "id": {
                        "type": "string",
                        "description": "Meeting ID, also know as meeting number"
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the user set as host of meeting"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/Meeting"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "MeetingSettings": {
      "type": "object",
      "description": "Meeting Settings",
      "properties": {
        "host_video": {
          "type": "boolean",
          "default": true
        },
        "participant_video": {
          "type": "boolean",
          "default": true
        },
        "cn_meeting": {
          "type": "boolean",
          "default": false
        },
        "in_meeting": {
          "type": "boolean",
          "default": false
        },
        "join_before_host": {
          "type": "boolean",
          "default": false
        },
        "mute_upon_entry": {
          "type": "boolean",
          "default": false
        },
        "watermark": {
          "type": "boolean",
          "default": false
        },
        "use_pmi": {
          "type": "boolean",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "enum": [
            0,
            1,
            2
          ]
        },
        "registration_type": {
          "type": "integer",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ]
        },
        "audio": {
          "type": "string",
          "default": "both",
          "enum": [
            "boht",
            "telephony",
            "voip"
          ]
        },
        "auto_recording": {
          "type": "string",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "enforce_login_domains": {
          "type": "boolean"
        },
        "alternatice_hosts": {
          "type": "boolean"
        }
      }
    },
    "MeetingRegistrant": {
      "type": "object",
      "description": "Meeting registrant",
      "allOf": [
        {
          "$ref": "#/definitions/Registrant"
        }
      ]
    },
    "MeetingRegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrantList"
        }
      ]
    },
    "Pagination": {
      "type": "object",
      "description": "Pagination Object",
      "properties": {
        "page_count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of items returned on this page."
        },
        "page_number": {
          "type": "integer",
          "format": "int64",
          "description": "The page number of current results."
        },
        "page_size": {
          "type": "integer",
          "format": "int64",
          "description": "The number of items per page."
        },
        "total_records": {
          "type": "integer",
          "format": "int64",
          "description": "The number of all records available across pages."
        }
      }
    },
    "Panelist": {
      "type": "object",
      "description": "Panelist base object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PanelistList": {
      "type": "object",
      "title": "Panelist List",
      "description": "List of Panelist",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "registrants": {
              "type": "array",
              "description": "List of Panelist objects.",
              "items": {
                "$ref": "#/definitions/Panelist"
              }
            }
          }
        }
      ]
    },
    "Recurrence": {
      "type": "object",
      "description": "Recurrence object",
      "properties": {
        "type": {
          "type": "integer"
        },
        "repeat_interval": {
          "type": "integer"
        },
        "weekly_days": {
          "type": "integer"
        },
        "monthly_day": {
          "type": "integer"
        },
        "monthly_week": {
          "type": "integer"
        },
        "monthly_week_day": {
          "type": "integer"
        },
        "end_times": {
          "type": "integer"
        },
        "end_date_time": {
          "type": "string",
          "format": "dateTime"
        }
      }
    },
    "Registrant": {
      "type": "object",
      "description": "Registrant base object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "industry": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "purchasing_time_frame": {
          "type": "string"
        },
        "role_in_purchase_process": {
          "type": "string"
        },
        "no_of_employees": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "custom_questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomQuestion"
          }
        }
      }
    },
    "RegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "registrants": {
              "type": "array",
              "description": "List of Registrant objects.",
              "items": {
                "$ref": "#/definitions/MeetingRegistrant"
              }
            }
          }
        }
      ]
    },
    "Session" : {
      "type" : "object",
      "description" : "Base object for sessions",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type",
          "enum": [
            1,
            2,
            3,
            8
          ]
        },
        "start_time": {
          "type": "string",
          "format": "dateTime",
          "description": "Meeting start time"
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time",
          "enum": [
            "Pacific/Midway",
            "Pacific/Pago_Pago",
            "Pacific/Honolulu",
            "America/Anchorage",
            "America/Vancouver",
            "America/Los_Angeles",
            "America/Tijuana",
            "America/Edmonton",
            "America/Denver",
            "America/Phoenix",
            "America/Mazatlan",
            "America/Winnipeg",
            "America/Regina",
            "America/Chicago",
            "America/Mexico_City",
            "America/Guatemala",
            "America/El_Salvador",
            "America/Managua",
            "America/Costa_Rica",
            "America/Montreal",
            "America/New_York",
            "America/Indianapolis",
            "America/Panama",
            "America/Bogota",
            "America/Lima",
            "America/Halifax",
            "America/Puerto_Rico",
            "America/Caracas",
            "America/Santiago",
            "America/St_Johns",
            "America/Montevideo",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Godthab",
            "America/Sao_Paulo",
            "Atlantic/Azores",
            "Canada/Atlantic",
            "Atlantic/Cape_Verde",
            "UTC",
            "Etc/Greenwich",
            "Europe/Belgrade",
            "CET",
            "Atlantic/Reykjavik",
            "Europe/Dublin",
            "Europe/London",
            "Europe/Lisbon",
            "Africa/Casablanca",
            "Africa/Nouakchott",
            "Europe/Oslo",
            "Europe/Copenhagen",
            "Europe/Brussels",
            "Europe/Berlin",
            "Europe/Helsinki",
            "Europe/Amsterdam",
            "Europe/Rome",
            "Europe/Stockholm",
            "Europe/Vienna",
            "Europe/Luxembourg",
            "Europe/Paris",
            "Europe/Zurich",
            "Europe/Madrid",
            "Africa/Bangui",
            "Africa/Algiers",
            "Africa/Tunis",
            "Africa/Harare",
            "Africa/Nairobi",
            "Europe/Warsaw",
            "Europe/Prague",
            "Europe/Budapest",
            "Europe/Sofia",
            "Europe/Istanbul",
            "Europe/Athens",
            "Europe/Bucharest",
            "Asia/Nicosia",
            "Asia/Beirut",
            "Asia/Damascus",
            "Asia/Jerusalem",
            "Asia/Amman",
            "Africa/Tripoli",
            "Africa/Cairo",
            "Africa/Johannesburg",
            "Europe/Moscow",
            "Asia/Baghdad",
            "Asia/Kuwait",
            "Asia/Riyadh",
            "Asia/Bahrain",
            "Asia/Qatar",
            "Asia/Aden",
            "Asia/Tehran",
            "Africa/Khartoum",
            "Africa/Djibouti",
            "Africa/Mogadishu",
            "Asia/Dubai",
            "Asia/Muscat",
            "Asia/Baku",
            "Asia/Kabul",
            "Asia/Yekaterinburg",
            "Asia/Tashkent",
            "Asia/Calcutta",
            "Asia/Kathmandu",
            "Asia/Novosibirsk",
            "Asia/Almaty",
            "Asia/Dacca",
            "Asia/Krasnoyarsk",
            "Asia/Dhaka",
            "Asia/Bangkok",
            "Asia/Saigon",
            "Asia/Jakarta",
            "Asia/Irkutsk",
            "Asia/Shanghai",
            "Asia/Hong_Kong",
            "Asia/Taipei",
            "Asia/Kuala_Lumpur",
            "Asia/Singapore",
            "Australia/Perth",
            "Asia/Yakutsk",
            "Asia/Seoul",
            "Asia/Tokyo",
            "Australia/Darwin",
            "Australia/Adelaide",
            "Asia/Vladivostok",
            "Pacific/Port_Moresby",
            "Australia/Brisbane",
            "Australia/Sydney",
            "Australia/Hobart",
            "Asia/Magadan",
            "SST",
            "Pacific/Noumea",
            "Asia/Kamchatka",
            "Pacific/Fiji",
            "Pacific/Auckland",
            "Asia/Kolkata",
            "Europe/Kiev",
            "America/Tegucigalpa",
            "Pacific/Apia"
          ]
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting"
        },
        "description": {
          "type": "string",
          "description": "Meeting description"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "settings": {
          "$ref": "#/definitions/MeetingSettings"
        }
      }
    },
    "User": {
      "type": "object",
      "description": "User object",
      "properties": {
        "email": {
          "type": "string",
          "description": "User's email address."
        },
        "first_name": {
          "type": "string",
          "description": "User's first name."
        },
        "last_name": {
          "type": "string",
          "description": "User's last name."
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ],
          "description": "User's type. 1: Basic; 2: Pro; 3: Corp;"
        }
      }
    },
    "UserList": {
      "type": "object",
      "title": "User List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "users": {
              "type": "array",
              "description": "List of User objects.",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "$ref": "#/definitions/UserDetails"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "UserDetails": {
      "title": "User object with details",
      "description": "Reference to a User object with details.",
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "dateTime"
        },
        "dept": {
          "type": "string"
        },
        "last_client_version": {
          "type": "string"
        },
        "last_login_time": {
          "type": "string",
          "format": "dateTime"
        },
        "pic_url": {
          "type": "string"
        },
        "pmi": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "vanity_url": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        }
      }
    },
    "UserSettings": {
      "title": "User settings",
      "type": "object",
      "properties": {
        "feature": {
          "$ref": "#/definitions/UserSettingsFeature"
        },
        "meeting": {
          "$ref": "#/definitions/UserSettingsMeeting"
        },
        "notification": {
          "$ref": "#/definitions/UserSettingsNotification"
        },
        "recording": {
          "$ref": "#/definitions/UserSettingsRecording"
        },
        "_security": {
          "$ref": "#/definitions/UserSettingsSecurity"
        }
      }
    },
    "UserSettingsMeeting": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "chat": {
          "type": "boolean"
        },
        "private_chat": {
          "type": "boolean"
        },
        "auto_saving_chat": {
          "type": "boolean"
        },
        "attendee_on_hold": {
          "type": "boolean"
        },
        "entry_exit_chime_host": {
          "type": "boolean"
        },
        "entry_exit_chime_all": {
          "type": "boolean"
        },
        "record_play_voice": {
          "type": "boolean"
        },
        "group_hd": {
          "type": "boolean"
        },
        "feedback": {
          "type": "boolean"
        },
        "co_host": {
          "type": "boolean"
        },
        "annotation": {
          "type": "boolean"
        },
        "polling": {
          "type": "boolean"
        },
        "non_verbal_feedback": {
          "type": "boolean"
        },
        "breakout_room": {
          "type": "boolean"
        },
        "remote_support": {
          "type": "boolean"
        },
        "file_transfer": {
          "type": "boolean"
        },
        "virtual_background": {
          "type": "boolean"
        },
        "closed_caption": {
          "type": "boolean"
        },
        "far_end_camera_control": {
          "type": "boolean"
        },
        "share_dual_camera": {
          "type": "boolean"
        },
        "attention_tracking": {
          "type": "boolean"
        },
        "waiting_room": {
          "type": "boolean"
        }
      }
    },
    "UserSettingsRecording": {
      "title": "User settings: Recording settings",
      "description": "",
      "type": "object",
      "properties": {
        "local_recording": {
          "type": "boolean"
        },
        "cloud_recording": {
          "type": "boolean"
        },
        "record_speaker_view": {
          "type": "boolean"
        },
        "record_gallery_view": {
          "type": "boolean"
        },
        "record_audio_file": {
          "type": "boolean"
        },
        "save_chat_text": {
          "type": "boolean"
        },
        "show_timestamp": {
          "type": "boolean"
        },
        "local_auto_recording": {
          "type": "boolean"
        },
        "cloud_auto_recording": {
          "type": "boolean"
        },
        "auto_delete_cmr": {
          "type": "boolean"
        },
        "auto_delete_cmr_days": {
          "type": "integer"
        }
      }
    },
    "UserSettingsNotification": {
      "title": "User settings: Notification settings",
      "description": "",
      "type": "object",
      "properties": {
        "jbh_reminder": {
          "type": "boolean"
        },
        "cancel_meeting_reminder": {
          "type": "boolean"
        },
        "alternative_host_reminder": {
          "type": "boolean"
        }
      }
    },
    "UserSettingsSecurity": {
      "title": "User settings: Security settings",
      "description": "",
      "type": "object",
      "properties": {
        "e2e_encryption": {
          "type": "boolean"
        },
        "pstn_password_protected": {
          "type": "boolean"
        }
      }
    },
    "UserSettingsFeature": {
      "title": "User settings: Feature settings",
      "description": "",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "type": "integer"
        },
        "large_meeting": {
          "type": "boolean"
        },
        "large_meeting_capacity": {
          "type": "integer"
        },
        "webinar": {
          "type": "boolean"
        },
        "webinar_capacity": {
          "type": "integer"
        }
      }
    },
    "Webinar": {
      "type": "object",
      "description": "Webinar object",
      "allOf": [
        {
          "$ref": "#/definitions/Session"
        }
      ]
    },
    "WebinarList": {
      "type": "object",
      "title": "User List",
      "description": "List of Webinars",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "description": "List of Webinar objects.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Webinar unique ID"
                      },
                      "id": {
                        "type": "string",
                        "description": "Webinar ID, also know as webinar number"
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the user set as host of webinar"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/Webinar"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "WebinarPanelist": {
      "type": "object",
      "description": "Webinar panelist",
      "allOf": [
        {
          "$ref": "#/definitions/Panelist"
        }
      ]
    },
    "WebinarPanelistList": {
      "type": "object",
      "description": "Webinar panelist",
      "allOf": [
        {
          "$ref": "#/definitions/PanelistList"
        }
      ]
    },
    "WebinarRegistrant": {
      "type": "object",
      "description": "Meeting registrant",
      "allOf": [
        {
          "$ref": "#/definitions/Registrant"
        }
      ]
    },
    "WebinarRegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrantList"
        }
      ]
    }
  },
  "tags": [
    {
      "name": "User",
      "description": "User operations"
    },
    {
      "name": "Meeting",
      "description": "Meeting operations"
    },
    {
      "name": "Webinar",
      "description": "Webinar operations"
    },
    {
      "name": "Accounts",
      "description": "Account operations"
    },
    {
      "name": "Billing",
      "description": "Account Billing operations"
    },
    {
      "name": "TSP",
      "description": "TSP operations"
    }
  ],
  "externalDocs": {
    "description": "Zoom REST API Documentation",
    "url": "https://zoom.github.io/api"
  },
  "securityDefinitions": {
    "global": {
      "type": "apiKey",
      "name": "jwt",
      "in": "query"
    }
  },
  "security": [
    {
      "global": []
    }
  ]
}